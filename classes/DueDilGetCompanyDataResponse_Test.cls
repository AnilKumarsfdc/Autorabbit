//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class DueDilGetCompanyDataResponse_Test {
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'    \"data\": {'+
		'        \"companyId\": \"05957565\",'+
		'        \"countryCode\": \"gb\",'+
		'        \"companyVitals\": {'+
		'            \"countryCode\": \"GB\",'+
		'            \"companyId\": \"05957565\",'+
		'            \"name\": \"Tata Steel Europe Limited\",'+
		'            \"type\": \"Private limited with share capital\",'+
		'            \"incorporationCountry\": \"United Kingdom\",'+
		'            \"incorporationDate\": \"2006-10-05\",'+
		'            \"officialStatus\": \"Active\",'+
		'            \"simplifiedStatus\": \"Active\",'+
		'            \"numberOfEmployees\": 21100,'+
		'            \"primaryWebsite\": \"http://www.tatasteeleurope.com\",'+
		'            \"registeredAddress\": {'+
		'                \"fullAddress\": \"30 Millbank, London, SW1P 4WY\",'+
		'                \"structuredAddress\": {'+
		'                    \"premises\": \"30\",'+
		'                    \"thoroughfare\": \"Millbank\",'+
		'                    \"postTown\": \"London\",'+
		'                    \"county\": \"London\",'+
		'                    \"postcode\": \"SW1P 4WY\",'+
		'                    \"countryCode\": \"GB\"'+
		'                },'+
		'                \"geolocation\": {'+
		'                    \"latitude\": 51.49273,'+
		'                    \"longitude\": -0.12596'+
		'                }'+
		'            },'+
		'            \"charitableIdentitiesCount\": 0,'+
		'            \"accounts\": {'+
		'                \"filingType\": \"Group\",'+
		'                \"currency\": \"GBP\",'+
		'                \"latestAccountsDate\": \"2018-03-31\",'+
		'                \"consolidatedAccounts\": true,'+
		'                \"nextAccountsDueDate\": \"2019-12-31\"'+
		'            },'+
		'            \"financialSummary\": {'+
		'                \"turnover\": 6988000256,'+
		'                \"ebitda\": 2025000064,'+
		'                \"postTaxProfit\": 1340000000,'+
		'                \"totalAssets\": 7632000000,'+
		'                \"netAssets\": -2318000128'+
		'            }'+
		'        },'+
		'        \"companyRegisteredNames\": {'+
		'            \"data\": ['+
		'                {'+
		'                    \"name\": \"Tata Steel Europe Limited\",'+
		'                    \"startDate\": \"2008-11-21\"'+
		'                },'+
		'                {'+
		'                    \"name\": \"Tulip UK Holdings (No.1) Limited\",'+
		'                    \"startDate\": \"2006-10-13\",'+
		'                    \"endDate\": \"2008-11-21\"'+
		'                },'+
		'                {'+
		'                    \"name\": \"Precis (2641) Limited\",'+
		'                    \"startDate\": \"2006-10-05\",'+
		'                    \"endDate\": \"2006-10-13\"'+
		'                }'+
		'            ],'+
		'            \"paging\": {'+
		'                \"totalRecords\": 3,'+
		'                \"pageSize\": 10,'+
		'                \"pageNumber\": 1'+
		'            }'+
		'        },'+
		'        \"companyIndustries\": {'+
		'            \"data\": ['+
		'                {'+
		'                    \"name\": \"Activities of head offices\",'+
		'                    \"code\": \"70100\",'+
		'                    \"type\": \"SIC2007\"'+
		'                },'+
		'                {'+
		'                    \"name\": \"Management activities of holding companies\",'+
		'                    \"code\": \"7415\",'+
		'                    \"type\": \"SIC2003\"'+
		'                }'+
		'            ],'+
		'            \"paging\": {'+
		'                \"totalRecords\": 2,'+
		'                \"pageSize\": 10,'+
		'                \"pageNumber\": 1'+
		'            }'+
		'        },'+
		'        \"companyAddresses\": {'+
		'            \"data\": ['+
		'                {'+
		'                    \"fullAddress\": \"30 Millbank, London, SW1P 4WY\",'+
		'                    \"structuredAddress\": {'+
		'                        \"premises\": \"30\",'+
		'                        \"thoroughfare\": \"Millbank\",'+
		'                        \"postTown\": \"London\",'+
		'                        \"county\": \"London\",'+
		'                        \"postcode\": \"SW1P 4WY\",'+
		'                        \"countryCode\": \"GB\"'+
		'                    },'+
		'                    \"geolocation\": {'+
		'                        \"latitude\": 51.49273,'+
		'                        \"longitude\": -0.12596'+
		'                    },'+
		'                    \"types\": ['+
		'                        \"registered\"'+
		'                    ]'+
		'                },'+
		'                {'+
		'                    \"fullAddress\": \"30 Millbank, London, SW1P 4WY\",'+
		'                    \"structuredAddress\": {'+
		'                        \"premises\": \"30\",'+
		'                        \"thoroughfare\": \"Millbank\",'+
		'                        \"postTown\": \"London\",'+
		'                        \"county\": \"London\",'+
		'                        \"postcode\": \"SW1P 4WY\",'+
		'                        \"countryCode\": \"GB\"'+
		'                    },'+
		'                    \"geolocation\": {'+
		'                        \"latitude\": 51.49273,'+
		'                        \"longitude\": -0.12596'+
		'                    },'+
		'                    \"types\": ['+
		'                        \"trading\"'+
		'                    ]'+
		'                }'+
		'            ],'+
		'            \"paging\": {'+
		'                \"totalRecords\": 2,'+
		'                \"pageSize\": 10,'+
		'                \"pageNumber\": 1'+
		'            }'+
		'        },'+
		'        \"companyTelephoneNumbers\": {'+
		'            \"data\": ['+
		'                {'+
		'                    \"telephoneNumber\": \"+44 20 7975 8382\",'+
		'                    \"address\": {'+
		'                        \"fullAddress\": \"30 Millbank, London, SW1P 4WY\",'+
		'                        \"structuredAddress\": {'+
		'                            \"premises\": \"30 Millbank\",'+
		'                            \"thoroughfare\": \"London\",'+
		'                            \"postcode\": \"SW1P 4WY\",'+
		'                            \"countryCode\": \"GB\"'+
		'                        },'+
		'                        \"geolocation\": {'+
		'                            \"latitude\": 51.49273,'+
		'                            \"longitude\": -0.12596'+
		'                        }'+
		'                    },'+
		'                    \"tpsRegistered\": false'+
		'                },'+
		'                {'+
		'                    \"telephoneNumber\": \"+44 20 7975 8382\",'+
		'                    \"address\": {'+
		'                        \"fullAddress\": \"30 Millbank, London, SW1P 4WY\",'+
		'                        \"structuredAddress\": {'+
		'                            \"premises\": \"30 Millbank\",'+
		'                            \"thoroughfare\": \"London\",'+
		'                            \"postcode\": \"SW1P 4WY\",'+
		'                            \"countryCode\": \"GB\"'+
		'                        },'+
		'                        \"geolocation\": {'+
		'                            \"latitude\": 51.49273,'+
		'                            \"longitude\": -0.12596'+
		'                        }'+
		'                    },'+
		'                    \"tpsRegistered\": false'+
		'                }'+
		'            ],'+
		'            \"paging\": {'+
		'                \"totalRecords\": 2,'+
		'                \"pageSize\": 10,'+
		'                \"pageNumber\": 1'+
		'            }'+
		'        },'+
		'        \"companyWebsites\": {'+
		'            \"data\": ['+
		'                {'+
		'                    \"website\": \"http://www.tatasteeleurope.com\",'+
		'                    \"score\": \"2\"'+
		'                }'+
		'            ],'+
		'            \"paging\": {'+
		'                \"totalRecords\": 1,'+
		'                \"pageSize\": 10,'+
		'                \"pageNumber\": 1'+
		'            }'+
		'        }'+
		'    },'+
		'    \"meta\": {'+
		'        \"code\": \"000000\",'+
		'        \"messages\": ['+
		'            \"Request processed successfully\"'+
		'        ]'+
		'    }'+
		'}';
		DueDilGetCompanyDataResponse r = DueDilGetCompanyDataResponse.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.CompanyIndustries objCompanyIndustries = new DueDilGetCompanyDataResponse.CompanyIndustries(System.JSON.createParser(json));
		System.assert(objCompanyIndustries != null);
		System.assert(objCompanyIndustries.data == null);
		System.assert(objCompanyIndustries.paging == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Meta objMeta = new DueDilGetCompanyDataResponse.Meta(System.JSON.createParser(json));
		System.assert(objMeta != null);
		System.assert(objMeta.code == null);
		System.assert(objMeta.messages == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Geolocation objGeolocation = new DueDilGetCompanyDataResponse.Geolocation(System.JSON.createParser(json));
		System.assert(objGeolocation != null);
		System.assert(objGeolocation.latitude == null);
		System.assert(objGeolocation.longitude == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Address objAddress = new DueDilGetCompanyDataResponse.Address(System.JSON.createParser(json));
		System.assert(objAddress != null);
		System.assert(objAddress.fullAddress == null);
		System.assert(objAddress.structuredAddress == null);
		System.assert(objAddress.geolocation == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.StructuredAddress_Z objStructuredAddress_Z = new DueDilGetCompanyDataResponse.StructuredAddress_Z(System.JSON.createParser(json));
		System.assert(objStructuredAddress_Z != null);
		System.assert(objStructuredAddress_Z.premises == null);
		System.assert(objStructuredAddress_Z.thoroughfare == null);
		System.assert(objStructuredAddress_Z.postcode == null);
		System.assert(objStructuredAddress_Z.countryCode == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Paging objPaging = new DueDilGetCompanyDataResponse.Paging(System.JSON.createParser(json));
		System.assert(objPaging != null);
		System.assert(objPaging.totalRecords == null);
		System.assert(objPaging.pageSize == null);
		System.assert(objPaging.pageNumber == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Data objData = new DueDilGetCompanyDataResponse.Data(System.JSON.createParser(json));
		System.assert(objData != null);
		System.assert(objData.name == null);
		System.assert(objData.startDate == null);
		System.assert(objData.endDate == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.CompanyAddresses objCompanyAddresses = new DueDilGetCompanyDataResponse.CompanyAddresses(System.JSON.createParser(json));
		System.assert(objCompanyAddresses != null);
		System.assert(objCompanyAddresses.data == null);
		System.assert(objCompanyAddresses.paging == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.StructuredAddress objStructuredAddress = new DueDilGetCompanyDataResponse.StructuredAddress(System.JSON.createParser(json));
		System.assert(objStructuredAddress != null);
		System.assert(objStructuredAddress.premises == null);
		System.assert(objStructuredAddress.thoroughfare == null);
		System.assert(objStructuredAddress.postTown == null);
		System.assert(objStructuredAddress.county == null);
		System.assert(objStructuredAddress.postcode == null);
		System.assert(objStructuredAddress.countryCode == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.CompanyWebsites objCompanyWebsites = new DueDilGetCompanyDataResponse.CompanyWebsites(System.JSON.createParser(json));
		System.assert(objCompanyWebsites != null);
		System.assert(objCompanyWebsites.data == null);
		System.assert(objCompanyWebsites.paging == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Data_Y objData_Y = new DueDilGetCompanyDataResponse.Data_Y(System.JSON.createParser(json));
		System.assert(objData_Y != null);
		System.assert(objData_Y.fullAddress == null);
		System.assert(objData_Y.structuredAddress == null);
		System.assert(objData_Y.geolocation == null);
		System.assert(objData_Y.types == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Data_Z objData_Z = new DueDilGetCompanyDataResponse.Data_Z(System.JSON.createParser(json));
		System.assert(objData_Z != null);
		System.assert(objData_Z.name == null);
		System.assert(objData_Z.code == null);
		System.assert(objData_Z.type_Z == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.CompanyTelephoneNumbers objCompanyTelephoneNumbers = new DueDilGetCompanyDataResponse.CompanyTelephoneNumbers(System.JSON.createParser(json));
		System.assert(objCompanyTelephoneNumbers != null);
		System.assert(objCompanyTelephoneNumbers.data == null);
		System.assert(objCompanyTelephoneNumbers.paging == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Data_W objData_W = new DueDilGetCompanyDataResponse.Data_W(System.JSON.createParser(json));
		System.assert(objData_W != null);
		System.assert(objData_W.website == null);
		System.assert(objData_W.score == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Data_X objData_X = new DueDilGetCompanyDataResponse.Data_X(System.JSON.createParser(json));
		System.assert(objData_X != null);
		System.assert(objData_X.telephoneNumber == null);
		System.assert(objData_X.address == null);
		System.assert(objData_X.tpsRegistered == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.RegisteredAddress objRegisteredAddress = new DueDilGetCompanyDataResponse.RegisteredAddress(System.JSON.createParser(json));
		System.assert(objRegisteredAddress != null);
		System.assert(objRegisteredAddress.fullAddress == null);
		System.assert(objRegisteredAddress.structuredAddress == null);
		System.assert(objRegisteredAddress.geolocation == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.CompanyVitals objCompanyVitals = new DueDilGetCompanyDataResponse.CompanyVitals(System.JSON.createParser(json));
		System.assert(objCompanyVitals != null);
		System.assert(objCompanyVitals.countryCode == null);
		System.assert(objCompanyVitals.companyId == null);
		System.assert(objCompanyVitals.name == null);
		System.assert(objCompanyVitals.type_Z == null);
		System.assert(objCompanyVitals.incorporationCountry == null);
		System.assert(objCompanyVitals.incorporationDate == null);
		System.assert(objCompanyVitals.officialStatus == null);
		System.assert(objCompanyVitals.simplifiedStatus == null);
		System.assert(objCompanyVitals.numberOfEmployees == null);
		System.assert(objCompanyVitals.primaryWebsite == null);
		System.assert(objCompanyVitals.registeredAddress == null);
		System.assert(objCompanyVitals.charitableIdentitiesCount == null);
		System.assert(objCompanyVitals.accounts == null);
		System.assert(objCompanyVitals.financialSummary == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse objDueDilGetCompanyDataResponse = new DueDilGetCompanyDataResponse(System.JSON.createParser(json));
		System.assert(objDueDilGetCompanyDataResponse != null);
		System.assert(objDueDilGetCompanyDataResponse.data == null);
		System.assert(objDueDilGetCompanyDataResponse.meta == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Data_V objData_V = new DueDilGetCompanyDataResponse.Data_V(System.JSON.createParser(json));
		System.assert(objData_V != null);
		System.assert(objData_V.companyId == null);
		System.assert(objData_V.countryCode == null);
		System.assert(objData_V.companyVitals == null);
		System.assert(objData_V.companyRegisteredNames == null);
		System.assert(objData_V.companyIndustries == null);
		System.assert(objData_V.companyAddresses == null);
		System.assert(objData_V.companyTelephoneNumbers == null);
		System.assert(objData_V.companyWebsites == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.FinancialSummary objFinancialSummary = new DueDilGetCompanyDataResponse.FinancialSummary(System.JSON.createParser(json));
		System.assert(objFinancialSummary != null);
		System.assert(objFinancialSummary.turnover == null);
		System.assert(objFinancialSummary.ebitda == null);
		System.assert(objFinancialSummary.postTaxProfit == null);
		System.assert(objFinancialSummary.totalAssets == null);
		System.assert(objFinancialSummary.netAssets == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.CompanyRegisteredNames objCompanyRegisteredNames = new DueDilGetCompanyDataResponse.CompanyRegisteredNames(System.JSON.createParser(json));
		System.assert(objCompanyRegisteredNames != null);
		System.assert(objCompanyRegisteredNames.data == null);
		System.assert(objCompanyRegisteredNames.paging == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		DueDilGetCompanyDataResponse.Accounts objAccounts = new DueDilGetCompanyDataResponse.Accounts(System.JSON.createParser(json));
		System.assert(objAccounts != null);
		System.assert(objAccounts.filingType == null);
		System.assert(objAccounts.currency_Z == null);
		System.assert(objAccounts.latestAccountsDate == null);
		System.assert(objAccounts.consolidatedAccounts == null);
		System.assert(objAccounts.nextAccountsDueDate == null);
	}
}